---
import { cva, cx } from 'class-variance-authority';
import type { ICartPlace } from '@/model';
import Text from '@/components/common/Text/Text.astro';

const cardPlace = cva(
  'px-2 py-2 lg:py-5 lg:px-5 cursor-pointer hover:-translate-y-2 transition-all duration-500 ease-in-out',
);

interface Props {
  className?: string;
  dataCard: ICartPlace;
  type?: 'deal' | 'stay' | 'explore';
  isSmallThumb?: boolean;
}

const { dataCard, isSmallThumb, type = 'deal', className } = Astro.props;
---

<div class={cardPlace({ class: className })} data-aos="fade-down">
  <div class="flex flex-col shadow-card rounded-xl h-full overflow-hidden">
    <img
      class={`w-full object-cover ${
        isSmallThumb ? 'h-[247px]' : 'h-[260px] lg:h-[397px]'
      }`}
      src={dataCard.image}
      alt="cart"
    />
    <div class="px-4 lg:px-6 py-4">
      <div class="flex flex-wrap lg:flex-nowrap justify-between">
        <Text
          className={cx('font-semibold text-grey-600 mb-2 lg:mb-0', {
            'text-primary': type === 'stay',
          })}
        >
          {dataCard.name}{type !== 'stay' && dataCard.place}
          <span
            class={cx({
              'text-primary': type === 'deal',
              'text-secondary': type === 'explore',
            })}>, {dataCard.place}</span
          >
        </Text>
        {
          type === 'deal' && (
            <Text className="font-semibold mb-1 lg:text-grey-600">
              <span class="lg:hidden">Flights from </span>${dataCard.price}
            </Text>
          )
        }
      </div>
      <Text
        className={cx({
          'hidden lg:block': type === 'deal',
        })}
      >
        {dataCard.description}
      </Text>
    </div>
  </div>
</div>
